{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchHook.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","htmlFor","id","type","value","onChange","target","getGifs","category","a","url","fetch","response","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchHook","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6OAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKlB,SACI,uBAAOO,QAAQ,SAAf,SACI,uBACIC,GAAG,SACHC,KAAK,OACLC,MAAQX,EACRY,SAnBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACJ,mCACD,GACRC,EAHa,iDAGmCF,EAHnC,kBAEL,GAFK,oBACJ,oCADI,SAIIG,MAAMD,GAJV,cAIbE,EAJa,gBAKEA,EAASC,OALX,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EACJE,KAAK,SAAAC,GAAG,YAAK,CACFf,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXR,IAAG,UAAEO,EAAIE,cAAN,aAAE,EAAYC,iBAAiBV,QAXnC,kBAaXK,GAbW,4CAAH,sDCGPM,G,YAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOR,EAAW,EAAXA,IAClC,OACQ,yBAAQY,UAAU,kDAAlB,UACgB,qBAAKC,IAAKb,EAAKc,IAAKN,IACpB,qCAAaA,SCH5BO,EAAU,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BsB,KAAO,GACPY,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACPtB,EAASC,GACJsB,MAAM,SAAAf,GACHa,EAAS,CACLd,KAAMC,EACNW,SAAS,SAGtB,CAAElB,IAEEmB,EDZyBI,CAAavB,GAAhCW,EAFsB,EAE5BL,KAAcY,EAFc,EAEdA,QAErB,OACI,oCACI,qBAAIJ,UAAU,wCAAd,UAAuDd,EAAvD,IAAiE,gCAAQkB,GAAW,mBACpF,qBAAKJ,UAAU,YAAf,SACCH,EAAOH,KAAK,SAAAgB,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAI9B,aETzC+B,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,eAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,qCACI,mCACI,oBAAI+B,UAAU,eAAd,0BACA,cAAC,EAAD,CAAa/B,cAAgBA,IAC7B,0BAEJ,kCAEYS,EAAWgB,KAAK,SAAAR,GAAQ,OACxB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCdjC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8c6840bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( categories => [ inputValue, ...categories] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <label htmlFor=\"buscar\">\r\n                <input \r\n                    id=\"buscar\"\r\n                    type=\"text\" \r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                /> \r\n            </label>\r\n              \r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const apiKey = 'qMrVfTdIChv3GofVc5kfLghfsC2muGNf';\r\n    const limit = 12;\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=${limit}&api_key=${apiKey}`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data\r\n            .map( img => ({\r\n                        id: img.id, \r\n                        title: img.title, \r\n                        url: img.images?.downsized_medium.url \r\n                    }));\r\n    return( gifs );\r\n}","import React from 'react'\r\n\r\nimport './GifGridItem.css';\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    return (\r\n            <figure className=\"gifs-card animate__animated animate__fadeInDown\">\r\n                            <img src={url} alt={title}></img>\r\n                            <figcaption>{title}</figcaption>\r\n            </figure>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchHook } from '../hooks/useFetchHook';\r\nimport './GifGrid.css';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchHook(category);    \r\n\r\n    return (\r\n        <article>\r\n            <h3 className='animate__animated animate__fadeInLeft'>{category} <small>{loading && \"Cargando...\"}</small></h3>\r\n            <div className=\"gifs-grid\">\r\n            {images.map( gif => <GifGridItem key={gif.id} {...gif}/>)}\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchHook = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs( category )\r\n            .then( gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false,\r\n                });\r\n            });\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Death Note']);\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <h2 className=\"header-title\">GifExpertApp</h2>\r\n                <AddCategory setCategories={ setCategories }/>\r\n                <hr /> \r\n            </header>\r\n            <section>\r\n                    {\r\n                        categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />)\r\n                    }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}